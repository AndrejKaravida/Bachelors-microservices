// <auto-generated />
using System;
using AvioApi.Data.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AvioApi.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200801195045_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AvioApi.Domain.Entities.AirCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Admin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("AverageGrade")
                        .HasColumnType("float");

                    b.Property<int?>("HeadOfficeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PromoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HeadOfficeId");

                    b.ToTable("AirCompanies");
                });

            modelBuilder.Entity("AvioApi.Domain.Entities.AvioIncomes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AirCompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AirCompanyId");

                    b.ToTable("AvioIncomes");
                });

            modelBuilder.Entity("AvioApi.Domain.Entities.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MapString")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AirCompanyBranches");
                });

            modelBuilder.Entity("AvioApi.Domain.Entities.CompanyRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AirCompanyId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AirCompanyId");

                    b.ToTable("AvioCompanyRatings");
                });

            modelBuilder.Entity("AvioApi.Domain.Entities.Destination", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AirCompanyId")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AirCompanyId");

                    b.ToTable("Destinations");
                });

            modelBuilder.Entity("AvioApi.Domain.Entities.Flight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AirCompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("ArrivalDestinationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("AverageGrade")
                        .HasColumnType("float");

                    b.Property<int?>("DepartureDestinationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Discount")
                        .HasColumnType("bit");

                    b.Property<double>("Luggage")
                        .HasColumnType("float");

                    b.Property<double>("Mileage")
                        .HasColumnType("float");

                    b.Property<double>("TicketPrice")
                        .HasColumnType("float");

                    b.Property<double>("TravelTime")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AirCompanyId");

                    b.HasIndex("ArrivalDestinationId");

                    b.HasIndex("DepartureDestinationId");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("AvioApi.Domain.Entities.FlightRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FlightId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FlightId");

                    b.ToTable("FlightRating");
                });

            modelBuilder.Entity("AvioApi.Domain.Entities.FlightReservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ArrivalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ArrivalDestination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyPhoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartureDestination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FlightId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TravelLength")
                        .HasColumnType("float");

                    b.Property<string>("UserAuthId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FlightId");

                    b.ToTable("FlightReservations");
                });

            modelBuilder.Entity("AvioApi.Domain.Entities.AirCompany", b =>
                {
                    b.HasOne("AvioApi.Domain.Entities.Branch", "HeadOffice")
                        .WithMany()
                        .HasForeignKey("HeadOfficeId");
                });

            modelBuilder.Entity("AvioApi.Domain.Entities.AvioIncomes", b =>
                {
                    b.HasOne("AvioApi.Domain.Entities.AirCompany", null)
                        .WithMany("Incomes")
                        .HasForeignKey("AirCompanyId");
                });

            modelBuilder.Entity("AvioApi.Domain.Entities.CompanyRating", b =>
                {
                    b.HasOne("AvioApi.Domain.Entities.AirCompany", null)
                        .WithMany("Ratings")
                        .HasForeignKey("AirCompanyId");
                });

            modelBuilder.Entity("AvioApi.Domain.Entities.Destination", b =>
                {
                    b.HasOne("AvioApi.Domain.Entities.AirCompany", null)
                        .WithMany("CompanyDestinations")
                        .HasForeignKey("AirCompanyId");
                });

            modelBuilder.Entity("AvioApi.Domain.Entities.Flight", b =>
                {
                    b.HasOne("AvioApi.Domain.Entities.AirCompany", null)
                        .WithMany("Flights")
                        .HasForeignKey("AirCompanyId");

                    b.HasOne("AvioApi.Domain.Entities.Destination", "ArrivalDestination")
                        .WithMany()
                        .HasForeignKey("ArrivalDestinationId");

                    b.HasOne("AvioApi.Domain.Entities.Destination", "DepartureDestination")
                        .WithMany()
                        .HasForeignKey("DepartureDestinationId");
                });

            modelBuilder.Entity("AvioApi.Domain.Entities.FlightRating", b =>
                {
                    b.HasOne("AvioApi.Domain.Entities.Flight", null)
                        .WithMany("Ratings")
                        .HasForeignKey("FlightId");
                });

            modelBuilder.Entity("AvioApi.Domain.Entities.FlightReservation", b =>
                {
                    b.HasOne("AvioApi.Domain.Entities.Flight", "Flight")
                        .WithMany()
                        .HasForeignKey("FlightId");
                });
#pragma warning restore 612, 618
        }
    }
}
